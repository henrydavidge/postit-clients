/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.PostItServiceApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 * Version: 
 * Generated at: 2016-05-13T14:31:06.919-07:00
 * Generated by: class io.swagger.codegen.languages.JavascriptClosureAngularClientCodegen
 */
goog.provide('API.Client.PostItServiceApi');

goog.require('API.Client.PostitCreatePostItTable');
goog.require('API.Client.PostitDeleteApiKey');
goog.require('API.Client.PostitPostIt');
goog.require('API.Client.PostitRegenerateApiKey');
goog.require('API.Client.PostitUpdatePostItTable');
goog.require('API.Client.postitCreatePostItTableResponse');
goog.require('API.Client.postitDeleteApiKeyResponse');
goog.require('API.Client.postitPostItResponse');
goog.require('API.Client.postitRegenerateApiKeyResponse');
goog.require('API.Client.postitUpdatePostItTableResponse');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.PostItServiceApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('PostItServiceApiBasePath') ?
                   /** @type {!string} */ ($injector.get('PostItServiceApiBasePath')) :
                   'http://localhost';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('PostItServiceApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('PostItServiceApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @private {!Object} */
  this.httpParamSerializer_ = $injector.get('$httpParamSerializer');
}
API.Client.PostItServiceApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * PostItService.createPostItTable
 * 
 * @param {!PostitCreatePostItTable} body 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.postitCreatePostItTableResponse>}
 */
API.Client.PostItServiceApi.prototype.createPostItTable = function(body, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/api/1.0/create';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders);
  // verify required parameter 'body' is set
  if (!body) {
    throw new Error('Missing required parameter body when calling createPostItTable');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: body,
    
    
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return this.http_(httpRequestParams);
}

/**
 * PostItService.deleteApiKey
 * 
 * @param {!PostitDeleteApiKey} body 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.postitDeleteApiKeyResponse>}
 */
API.Client.PostItServiceApi.prototype.deleteApiKey = function(body, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/api/1.0/delete';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders);
  // verify required parameter 'body' is set
  if (!body) {
    throw new Error('Missing required parameter body when calling deleteApiKey');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: body,
    
    
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return this.http_(httpRequestParams);
}

/**
 * PostItService.postIt
 * 
 * @param {!PostitPostIt} body 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.postitPostItResponse>}
 */
API.Client.PostItServiceApi.prototype.postIt = function(body, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/api/1.0/post';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders);
  // verify required parameter 'body' is set
  if (!body) {
    throw new Error('Missing required parameter body when calling postIt');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: body,
    
    
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return this.http_(httpRequestParams);
}

/**
 * PostItService.regenerateApiKey
 * 
 * @param {!PostitRegenerateApiKey} body 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.postitRegenerateApiKeyResponse>}
 */
API.Client.PostItServiceApi.prototype.regenerateApiKey = function(body, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/api/1.0/regenerate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders);
  // verify required parameter 'body' is set
  if (!body) {
    throw new Error('Missing required parameter body when calling regenerateApiKey');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: body,
    
    
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return this.http_(httpRequestParams);
}

/**
 * PostItService.updatePostItTable
 * 
 * @param {!PostitUpdatePostItTable} body 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.postitUpdatePostItTableResponse>}
 */
API.Client.PostItServiceApi.prototype.updatePostItTable = function(body, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/api/1.0/update';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders);
  // verify required parameter 'body' is set
  if (!body) {
    throw new Error('Missing required parameter body when calling updatePostItTable');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: body,
    
    
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return this.http_(httpRequestParams);
}
