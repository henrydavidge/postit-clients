//
// PostItServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class PostItServiceAPI: APIBase {
    /**
     
     PostItService.createPostItTable
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createPostItTable(body body: PostitCreatePostItTable, completion: ((data: PostitCreatePostItTableResponse?, error: ErrorType?) -> Void)) {
        createPostItTableWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     PostItService.createPostItTable
     
     - POST /api/1.0/create
     - examples: [{contentType=application/json, example={
  "api_key" : "aeiou"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<PostitCreatePostItTableResponse> 
     */
    public class func createPostItTableWithRequestBuilder(body body: PostitCreatePostItTable) -> RequestBuilder<PostitCreatePostItTableResponse> {
        let path = "/api/1.0/create"
        let URLString = SwaggerClientAPI.basePath + path
        
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PostitCreatePostItTableResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     PostItService.deleteApiKey
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteApiKey(body body: PostitDeleteApiKey, completion: ((data: PostitDeleteApiKeyResponse?, error: ErrorType?) -> Void)) {
        deleteApiKeyWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     PostItService.deleteApiKey
     
     - POST /api/1.0/delete
     - examples: [{contentType=application/json, example={ }}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<PostitDeleteApiKeyResponse> 
     */
    public class func deleteApiKeyWithRequestBuilder(body body: PostitDeleteApiKey) -> RequestBuilder<PostitDeleteApiKeyResponse> {
        let path = "/api/1.0/delete"
        let URLString = SwaggerClientAPI.basePath + path
        
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PostitDeleteApiKeyResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     PostItService.postIt
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postIt(body body: PostitPostIt, completion: ((data: PostitPostItResponse?, error: ErrorType?) -> Void)) {
        postItWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     PostItService.postIt
     
     - POST /api/1.0/post
     - examples: [{contentType=application/json, example={ }}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<PostitPostItResponse> 
     */
    public class func postItWithRequestBuilder(body body: PostitPostIt) -> RequestBuilder<PostitPostItResponse> {
        let path = "/api/1.0/post"
        let URLString = SwaggerClientAPI.basePath + path
        
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PostitPostItResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     PostItService.regenerateApiKey
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func regenerateApiKey(body body: PostitRegenerateApiKey, completion: ((data: PostitRegenerateApiKeyResponse?, error: ErrorType?) -> Void)) {
        regenerateApiKeyWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     PostItService.regenerateApiKey
     
     - POST /api/1.0/regenerate
     - examples: [{contentType=application/json, example={
  "api_key" : "aeiou"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<PostitRegenerateApiKeyResponse> 
     */
    public class func regenerateApiKeyWithRequestBuilder(body body: PostitRegenerateApiKey) -> RequestBuilder<PostitRegenerateApiKeyResponse> {
        let path = "/api/1.0/regenerate"
        let URLString = SwaggerClientAPI.basePath + path
        
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PostitRegenerateApiKeyResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     PostItService.updatePostItTable
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updatePostItTable(body body: PostitUpdatePostItTable, completion: ((data: PostitUpdatePostItTableResponse?, error: ErrorType?) -> Void)) {
        updatePostItTableWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     PostItService.updatePostItTable
     
     - POST /api/1.0/update
     - examples: [{contentType=application/json, example={ }}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<PostitUpdatePostItTableResponse> 
     */
    public class func updatePostItTableWithRequestBuilder(body body: PostitUpdatePostItTable) -> RequestBuilder<PostitUpdatePostItTableResponse> {
        let path = "/api/1.0/update"
        let URLString = SwaggerClientAPI.basePath + path
        
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let requestBuilder: RequestBuilder<PostitUpdatePostItTableResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

}
